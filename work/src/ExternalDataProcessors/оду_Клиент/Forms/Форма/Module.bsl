//ВнОбработка ОМ.оду_Клиент

&НаКлиенте
Процедура ОбработкаКомандыУОД_ПоОбъекту(ПараметрКоманды, ПараметрыВыполненияКоманды) 	Экспорт
	
	Если ПараметрКоманды.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	
	//ИмяТипаXML = пр_Общий.ИмяТипаXMLПоСсылке(ПараметрКоманды[0]); 
	//НастройкиТекущейБД = оду_ОбщийПовтИсп.НастройкиТекущейБД();	 
	//
	////01 Индивидуальные отборы объектов обмена 
	////TODO:  
	////МассивОбъектовОбмена = оду_ОбменДанными.МассивОбъектовОбменаСамолетПоОтбору(ПараметрКоманды, ИмяТипаXML, НастройкиТекущейБД.ИДКонфигурации); 
	////МассивОбъектовОбмена = МассивОбъектовОбменаСамолетПоОтбору(ПараметрКоманды, ИмяТипаXML, НастройкиТекущейБД.ИДКонфигурации); 
	//
	////02 Отборы в настройках УО (Организации, Тип объекта, Признак Использования, Признаки баз копия-рабочая)
	////СтруктураДанных = МассивОрганизацийВОбъектахОбмена(ИмяТипаXML, МассивОбъектовОбмена);
	//СтруктураДанных = МассивОрганизацийВОбъектахОбмена(ИмяТипаXML, ПараметрКоманды);
	//
	//МассивОрганизаций = СтруктураДанных.МассивОрганизаций;
	////МассивУчастниковОбмена = МассивУчастниковОбменаПоТипуОбъектаСамолет(ИмяТипаXML, НастройкиТекущейБД, МассивОбъектовОбмена, МассивОрганизаций);
	//МассивУчастниковОбмена = МассивУчастниковОбменаПоТипуОбъектаСамолет(ИмяТипаXML, НастройкиТекущейБД, ПараметрКоманды, МассивОрганизаций);
	//
	//Если МассивУчастниковОбмена = Неопределено Тогда
	//	Сообщение = Новый СообщениеПользователю;
	//	Сообщение.Текст = "Объект не участвует в обмене через самолет";
	//	Сообщение.Сообщить(); 
	//	Возврат;
	//КонецЕсли; 
	//
	//СоответствиеОбъектовОбменаОрганизации = СтруктураДанных.СоответствиеОбъектовОбменаОрганизации;
	//
	//ТекущийПользователь = пр_НастройкиПовтИсп.ТекущийПользователь();
	//
	//ПараметрыРегистрации = Новый Структура();
	//ПараметрыРегистрации.Вставить("МассивУчастниковОбмена", МассивУчастниковОбмена);
	//ПараметрыРегистрации.Вставить("СоответствиеОбъектовОбменаОрганизации", СоответствиеОбъектовОбменаОрганизации);
	//ПараметрыРегистрации.Вставить("ТекущийПользователь", ТекущийПользователь);
	//ПараметрыРегистрации.Вставить("ИмяТипаXML", ИмяТипаXML);
	
	ПараметрыРегистрации = ПараметрыРегистрацииУчастниковОбменаПоТипуОбъекта(ПараметрКоманды, пр_НастройкиПовтИсп.ТекущийПользователь(), Истина);
	МассивУчастниковОбмена = ПараметрыРегистрации.МассивУчастниковОбмена;
											
	//03 Проверка возможности регистрации
	Если МассивУчастниковОбмена.Количество() = 1 Тогда
		ЗарегистрироватьОбъектыОбменаСамолет(ПараметрыРегистрации);
	ИначеЕсли МассивУчастниковОбмена.Количество() > 1 Тогда
		
		ОписОповещФормы = Новый ОписаниеОповещения("ПослеВыбораУчатникаОбмена", ЭтотОбъект); //ЭтаФорма, ЭтотОбъект   
		АдресПараметрыРегистрации = ПоместитьВоВременноеХранилище(ПараметрыРегистрации, УникальныйИдентификатор);
		ПарамФормы = Новый Структура("МассивУчастниковОбмена, АдресПараметрыРегистрации", МассивУчастниковОбмена, АдресПараметрыРегистрации);
		
		Путь = "\\pivo.local\Resource\Личные\Кириллов ПС\r\work\Обработки_оду_пр\С_оду_БазыУчастникиОбмена.epf";
		пр_Клиент.ОткрытьФормуВнешнейОбработки(Путь, "ФормаВыбораУчастникаОбмена", ПарамФормы, , , , , ОписОповещФормы);
		
		//TODO:  
		//ОткрытьФорму("Справочник.оду_БазыУчастникиОбмена.Форма.ФормаВыбораУчастникаОбмена", ПараметрыРегистрации,,,,, ОписОповещФормы, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца); 

	КонецЕсли; 
	
КонецПроцедуры


#Область  УОД_Самолет

&НаКлиенте
Процедура ПослеВыбораУчатникаОбмена(ПараметрыВыбора, Параметры) Экспорт
	
	Если ПараметрыВыбора = Неопределено Тогда
		Возврат;	
	КонецЕсли; 
	
	МассивВыбраныхУО = ПараметрыВыбора.МассивУчастниковОбмена;
	Если МассивВыбраныхУО = Неопределено Тогда
		Возврат;	
	КонецЕсли; 
	
	ПараметрыРегистрации = ПолучитьИзВременногоХранилища(АдресПараметрыРегистрации);
	
	МассивУчастниковОбмена = ПараметрыРегистрации.МассивУчастниковОбмена;
	
	Инд = МассивУчастниковОбмена.ВГраница();
	
	Пока Инд >= 0 Цикл
		
		ЭлМас = МассивУчастниковОбмена[Инд];
		
		НайдСтрока = МассивВыбраныхУО.Найти(ЭлМас.БазаПриемник);
		Если НайдСтрока = Неопределено Тогда
			МассивУчастниковОбмена.Удалить(Инд);	
		КонецЕсли; 	
	
		Инд = Инд - 1;		
	
	КонецЦикла; 
	
	ЗарегистрироватьОбъектыОбменаСамолет(ПараметрыРегистрации);

КонецПроцедуры 

//TODO:  
//Процедура ЗарегистрироватьОбъектыОбменаСамолет(ПараметрыРегистрации)
//	
//	РезультатРегистрации = оду_ОбменДанными.РезультатРегистрацииОбъектовОбменаСамолет(ПараметрыРегистрации);
//	Если РезультатРегистрации = Истина Тогда
//		оду_Общий.ВыполнитьОбменВФоне(оду_ОбщийПовтИсп.РежимВыгрузка(), 2);
//	КонецЕсли;	
//	
//КонецПроцедуры

#КонецОбласти    

//TODO:  
#Область  ОтладкаУдалить

Функция ПараметрыРегистрацииУчастниковОбменаПоТипуОбъекта(МассивОбъектовОбмена, ТекущийПользователь = Неопределено, ЭтоСамолет = Ложь) Экспорт
	
	Модуль = пр_НастройкиПовтИсп.ИсполняемыйМодуль("оду_Общий", ТекущийПользователь);
	ПараметрыРегистрации = Модуль.ПараметрыРегистрацииУчастниковОбменаПоТипуОбъекта(МассивОбъектовОбмена, ТекущийПользователь, Истина);
											
	Возврат ПараметрыРегистрации;
	
КонецФункции 

Процедура ЗарегистрироватьОбъектыОбменаСамолет(ПараметрыРегистрации)
	
	Модуль = пр_НастройкиПовтИсп.ИсполняемыйМодуль("оду_Общий", ПараметрыРегистрации.ТекущийПользователь);
	РезультатРегистрации = Модуль.РезультатРегистрацииОбъектовОбменаСамолет(ПараметрыРегистрации);
	
	Возврат;
	
	//РезультатРегистрации = оду_Общий.ЗарегистрироватьОбъектыОбменаСамолет(ПараметрыРегистрации);
	//РезультатРегистрации = оду_ОбменДанными.РезультатРегистрацииОбъектовОбменаСамолет(ПараметрыРегистрации);
	Если РезультатРегистрации = Истина Тогда
		оду_Общий.ВыполнитьОбменВФоне(оду_ОбщийПовтИсп.РежимВыгрузка(), 2);
	КонецЕсли;	
	
КонецПроцедуры

Функция МассивУчастниковОбменаПоТипуОбъектаСамолет(ИмяТипа, НастройкиТекущейБД, МассивОбъектовОбмена, МассивОрганизаций = Неопределено)  
	
	Модуль = пр_НастройкиПовтИсп.ИсполняемыйМодуль("оду_ОбщийПовтИсп", пр_НастройкиПовтИсп.ТекущийПользователь());
	
	//Если МассивОрганизаций = Неопределено Тогда
	//	//Модуль = пр_НастройкиПовтИсп.ИсполняемыйМодуль("оду_ОбщийПовтИсп", пр_НастройкиПовтИсп.ТекущийПользователь());
	//	МассивУчастниковОбмена = Модуль.МассивУчастниковОбменаПоТипуОбъекта(ИмяТипа, НастройкиТекущейБД, Истина);
	//Иначе 	
		//Модуль = пр_НастройкиПовтИсп.ИсполняемыйМодуль("оду_Общий", пр_НастройкиПовтИсп.ТекущийПользователь());
		МассивУчастниковОбмена = Модуль.МассивУчастниковОбменаПоТипуОбъектаИОрганизаций(ИмяТипа, НастройкиТекущейБД, Истина, МассивОрганизаций);
	//КонецЕсли; 
	
	Возврат МассивУчастниковОбмена;
	
КонецФункции 

Функция МассивОрганизацийВОбъектахОбмена(ИмяТипаXML, МассивОбъектовОбмена)
	
	Попытка
		
		Если СтрНайти(ИмяТипаXML, "DocumentRef") = 0 Тогда
			Возврат Неопределено;		
		КонецЕсли; 
		
		Запрос = Новый Запрос;
		ТекстЗапроса = 
			"ВЫБРАТЬ
			|	Док.Организация КАК Организация,
			|	Док.Ссылка КАК Ссылка
			|ИЗ
			|	#Док КАК Док
			|ГДЕ
			|	Док.Ссылка В(&МассивОбъектовОбмена)
			|ИТОГИ ПО
			|	Организация
			|";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#Док", СтрЗаменить(ИмяТипаXML, "Ref", "")); 
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("МассивОбъектовОбмена", МассивОбъектовОбмена);
		
		РЗ = Запрос.Выполнить();
		
		Если РЗ.Пустой() Тогда
			Возврат Неопределено;		
		КонецЕсли;
		
		ВЗ = РЗ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		МассивОрганизаций = Новый Массив;
		СоответствиеОбъектовОбменаОрганизации = Новый Соответствие;
		
		Пока ВЗ.Следующий() Цикл
			
			МассивОрганизаций.Добавить(ВЗ.Организация);	
			
			ВДЗ = ВЗ.Выбрать();
			
			МассивОбмена = Новый Массив;

			Пока ВДЗ.Следующий() Цикл
				МассивОбмена.Добавить(ВДЗ.Ссылка);
			КонецЦикла;
			
			СоответствиеОбъектовОбменаОрганизации.Вставить(ВЗ.Организация, МассивОбмена);
			
		КонецЦикла;
		
		СтруктураДанных = Новый Структура("МассивОрганизаций, СоответствиеОбъектовОбменаОрганизации", МассивОрганизаций, СоответствиеОбъектовОбменаОрганизации); 
		Возврат СтруктураДанных;
		
	Исключение
		пр_Ошибка = ОписаниеОшибки();
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = пр_Ошибка;
		Сообщение.Сообщить(); 
		оду_Общий.ОтправитьСообщениеВТелеграмExchange("МассивОрганизацийВОбъектахОбмена", , пр_Ошибка);
	КонецПопытки;
		
КонецФункции  

//Проверка на индивидуальные настройки УО 
Функция МассивОбъектовОбменаСамолетПоОтбору(ПараметрКоманды, ИмяТипаXML, ИДКонфигурации)
	
	Модуль = пр_НастройкиПовтИсп.ИсполняемыйМодуль("оду_ОбменДанными", пр_НастройкиПовтИсп.ТекущийПользователь());
	МассивОбъектовОбмена = Модуль.МассивОбъектовОбменаСамолетПоОтбору(ПараметрКоманды, ИмяТипаXML, ИДКонфигурации); 

	Возврат МассивОбъектовОбмена;
	
КонецФункции 

#КонецОбласти


//ВнОбработка ОМ.оду_Клиент